* Jupyter on the Cluster
** First open an interactive session on the cluster:   

   srun -p test --pty --mem 500 -t 0-06:00 /bin/bash
   will start a command line shell (/bin/bash) on the test queue with 500 MB of RAM for 6 hours; 1 core on 1 node is assumed as these parameters (-n 1 -N 1) were left out. When the interactive session starts, you will notice that you are no longer on a login node, but rather one of the compute nodes dedicated to this queue. The --pty option allows the session to act like a standard terminal.

srun -p test --pty --mem 4000 -t 0-06:00 /bin/bash feels like a good start

** Next load anaconda and julia modules

   module load Anaconda3/5.0.1-fasrc02
   module load julia/1.3.1-fasrc01
   
** Install IJulia

   can either do this through REPL or try:
   julia -e 'import Pkg; Pkg.add("IJulia")'. Do this for all relevant packages when loading the env. 

** Find an open port

   for myport in {6818..11845}; do ! nc -z localhost ${myport} && break; done
   echo "ssh -NL $myport:$(hostname):$myport $USER@login.rc.fas.harvard.edu

   This step will output a line that indicates the location of the host on the cluster. Open a new terminal and paste it into a line. e.g.

ssh -NL 6819:holy7c12202.rc.fas.harvard.edu:6819 andrewdbolton@login.rc.fas.harvard.edu

Calling this should do nothing but ask for your password and verification. 

** Return to the original terminal and connect:

jupyter-notebook --no-browser --port=$myport --ip='0.0.0.0'

Then just open the local site the terminal outputs. Done. 


To Try:

use Pkg.activate(".") at the command line like above for add. Hopefully you only have to install the libs once. 
